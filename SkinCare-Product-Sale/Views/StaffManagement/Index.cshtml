@model IEnumerable<Data_Access_Layer.Entities.Account>

@{
    Layout = "_LayoutContact&News";
    ViewData["Title"] = "Danh sách nhân viên";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<h2>@ViewData["Title"]</h2>

<div class="main container">
    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addStaffModal">
        Thêm nhân viên
    </button>

    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var staff in Model)
            {
                <tr>
                    <td>@staff.Username</td>
                    <td>
                        <form asp-action="ToggleStatus" asp-controller="StaffManagement" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@staff.AccountId" />
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-@(staff.IsActive ? "danger" : "success")">
                                @(staff.IsActive ? "Deactivate" : "Activate")
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal Form -->
<div class="modal fade" id="addStaffModal" tabindex="-1" aria-labelledby="addStaffModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStaffModalLabel">Thêm nhân viên mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addStaffForm" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input id="newUsername" class="form-control" required autocomplete="username" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input id="newPassword" type="password" class="form-control" required
                               autocomplete="new-password" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Thêm</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.getElementById('addStaffForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const username = document.getElementById("newUsername").value.trim();
        const password = document.getElementById("newPassword").value.trim();
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        if (!username || !password) {
            alert("Vui lòng nhập đầy đủ thông tin.");
            return;
        }

        try {
            const response = await fetch('@Url.Action("AddStaff", "StaffManagement")', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": token
                },
                body: JSON.stringify({
                    Username: username,
                    Password: password
                })
            });

            if (response.ok) {
                const result = await response.json();
                alert(result.message);
                location.reload();
            } else if (response.status === 404) {
                alert("Endpoint không tồn tại. Vui lòng kiểm tra lại URL.");
            } else {
                const error = await response.text();
                alert(error || "Không thể thêm nhân viên");
            }
        } catch (error) {
            console.error("Error:", error);
            alert("Có lỗi xảy ra khi kết nối đến server");
        }
    });
</script>